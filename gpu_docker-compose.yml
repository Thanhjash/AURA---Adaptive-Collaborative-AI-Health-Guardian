services:
  ai_server:
    build: ./services/ai_server
    ports:
      - "9000:9000"
    volumes:
      - /mnt/d/3.Project/AURA-Health-Guardian/.hf_cache:/app/.hf_cache
    environment:
      - HF_HOME=/app/.hf_cache
      - CUDA_VISIBLE_DEVICES=0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY} 
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - aura_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:9000/health', timeout=5)"]
      interval: 15s
      timeout: 10s
      retries: 6
      start_period: 90s  # Allow time for MedGemma model loading

  ecg_interpreter:
    build: ./services/ecg_interpreter
    ports:
      - "8001:8001"
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - aura_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health', timeout=5)"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 45s

  radiology_vqa:
    build: ./services/radiology_vqa
    ports:
      - "8002:8002"
    depends_on:
      ai_server:
        condition: service_healthy
    networks:
      - aura_network

  mental_wellness:
    build: ./services/mental_wellness
    ports:
      - "8003:8003"
    depends_on:
      ai_server:
        condition: service_healthy
    networks:
      - aura_network

  aura_main:
    build:
      context: .
      dockerfile: services/aura_main/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
    environment:
      - ENV=development
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      ai_server:
        condition: service_healthy
      ecg_interpreter:
        condition: service_healthy
      radiology_vqa:
        condition: service_started
      mental_wellness:
        condition: service_started
    networks:
      - aura_network

networks:
  aura_network:
    driver: bridge